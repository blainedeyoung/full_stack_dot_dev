# Generated by Django 5.0.6 on 2024-06-17 03:02

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('catalogue', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice_text', models.TextField(blank=True, null=True)),
                ('attached_file', models.FileField(blank=True, null=True, upload_to='')),
                ('letter', models.CharField(max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(blank=True)),
                ('title', models.CharField(max_length=100)),
                ('date_created', models.DateField(auto_now_add=True)),
                ('lesson_type', models.CharField(choices=[('v', 'Video'), ('t', 'Text'), ('q', 'Quiz'), ('e', 'Exercise')], max_length=10)),
                ('attached_file', models.FileField(blank=True, null=True, upload_to='')),
                ('lesson_text', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField(blank=True, null=True)),
                ('attached_file', models.FileField(blank=True, null=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(blank=True)),
                ('title', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('access_url', models.URLField(max_length=100)),
                ('date_created', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='AnswerSets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('date_made', models.DateTimeField(auto_now_add=True)),
                ('is_key', models.BooleanField(default=False)),
                ('choices', models.CharField(max_length=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_answers', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('version', models.CharField(max_length=30)),
                ('date_created', models.DateField(auto_now_add=True)),
                ('assistants', models.ManyToManyField(blank=True, related_name='assistants', through='catalogue.CourseAssistants', to=settings.AUTH_USER_MODEL)),
                ('categories', models.ManyToManyField(blank=True, to='catalogue.category')),
            ],
        ),
    ]
